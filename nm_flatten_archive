#!/usr/bin/env python3

import argparse
import logging
import os
from dataclasses import dataclass
from glob import glob
from pathlib import Path
from shutil import copyfile
from typing import Set


@dataclass
class Arguments():
    input_dir: str
    output_dir: str


def main():
    args = parse_args()
    logging.basicConfig(level=logging.INFO)
    flatten(args)


def flatten(args: Arguments):
    logging.info("Beginning process of flattening files")
    logging.info("src_directory: %s, dst_directory: %s", args.input_dir,
                 args.output_dir)

    os.makedirs(args.output_dir, exist_ok=True)

    all_paths = glob(os.path.join(args.input_dir, '**', '*'), recursive=True)
    names: Set[str] = set()

    for path in all_paths:
        if Path(path).is_dir():
            logging.debug("Skipping %s as it is a directory", path)
            continue

        name = os.path.basename(path)
        if name in names:
            logging.warning("%s has been overwritten! Resolve by hand!", name)
        names.add(name)
        copyfile(path, os.path.join(args.output_dir, name))


def parse_args() -> Arguments:
    parser = argparse.ArgumentParser(
        description='Flatten a directory to another location')

    parser.add_argument('--input-dir',
                        type=str,
                        required=True,
                        help='location of files to flatten')

    parser.add_argument('--output-dir',
                        type=str,
                        required=True,
                        help='desired output for flat files')

    args = parser.parse_args()

    return Arguments(args.input_dir, args.output_dir)


main()

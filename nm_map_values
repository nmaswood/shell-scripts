#!/usr/bin/env python3

import argparse
import json
from dataclasses import dataclass
from typing import List


@dataclass
class Arguments():
    mapping_file: str
    input_file: str
    output_file: str


def main():
    args = parse_args()
    values = map_values(args)
    with open(args.output_file, 'w') as outfile:
        json.dump(values, outfile)


def map_values(args: Arguments) -> List[str]:

    with open(args.mapping_file) as infile:
        mapping = json.load(infile)

    with open(args.input_file) as infile:
        input_values = json.load(infile)

    return [mapping.get(x, x) for x in input_values]


def parse_args() -> Arguments:
    parser = argparse.ArgumentParser(
        description='Map values using a lookup table')
    parser.add_argument('--mapping',
                        type=str,
                        required=True,
                        help='Location of mapping file (json)')

    parser.add_argument('--input-file',
                        type=str,
                        required=True,
                        help='list of values to map')

    parser.add_argument('--output-file',
                        type=str,
                        required=True,
                        help='output destination file')

    args = parser.parse_args()

    return Arguments(args.mapping, args.input_file, args.output_file)


main()
